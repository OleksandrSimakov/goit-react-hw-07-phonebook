{"ast":null,"code":"var _jsxFileName = \"/Users/sima/Documents/GitHub/goit-react-hw-07-phonebook/src/Components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport ContactAddForm from './ContactAddForm/ContactAddForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\nimport { useSelector } from 'react-redux';\nimport { useGetContactsQuery } from '../redux/contacts/apiService';\nimport { Spinner } from './Spinner/Spinner';\nimport { Toaster } from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const {\n    data,\n    isFetching\n  } = useGetContactsQuery();\n  const filter = useSelector(state => state.filter.filter);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactAddForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), isFetching && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 22\n    }, this), data && /*#__PURE__*/_jsxDEV(ContactList, {\n      contacts: data.filter(contact => contact.name.toLowerCase().includes(filter))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Toaster, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"wD4RvL4tWzACF7o+8pxLWs3ld2Q=\", false, function () {\n  return [useGetContactsQuery, useSelector];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sima/Documents/GitHub/goit-react-hw-07-phonebook/src/Components/App.jsx"],"names":["ContactAddForm","ContactList","Filter","useSelector","useGetContactsQuery","Spinner","Toaster","App","data","isFetching","filter","state","contact","name","toLowerCase","includes"],"mappings":";;;AAAA,OAAOA,cAAP,MAA2B,iCAA3B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,mBAAT,QAAoC,8BAApC;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAuBL,mBAAmB,EAAhD;AAEA,QAAMM,MAAM,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACD,MAAN,CAAaA,MAAzB,CAA1B;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAHF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAOE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAPF,EASGD,UAAU,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YATjB,EAWGD,IAAI,iBACH,QAAC,WAAD;AACE,MAAA,QAAQ,EAAEA,IAAI,CAACE,MAAL,CAAaE,OAAD,IACpBA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCL,MAApC,CADQ;AADZ;AAAA;AAAA;AAAA;AAAA,YAZJ,eAmBE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA,kBADF;AAuBD;;GA5BuBH,G;UACOH,mB,EAEdD,W;;;KAHOI,G","sourcesContent":["import ContactAddForm from './ContactAddForm/ContactAddForm'\nimport ContactList from './ContactList/ContactList'\nimport Filter from './Filter/Filter'\nimport { useSelector } from 'react-redux'\nimport { useGetContactsQuery } from '../redux/contacts/apiService'\nimport { Spinner } from './Spinner/Spinner'\nimport { Toaster } from 'react-hot-toast'\n\nexport default function App() {\n  const { data, isFetching } = useGetContactsQuery()\n\n  const filter = useSelector((state) => state.filter.filter)\n\n  return (\n    <>\n      <h2>Phonebook</h2>\n\n      <ContactAddForm />\n\n      <h2>Contacts</h2>\n\n      <Filter />\n\n      {isFetching && <Spinner />}\n\n      {data && (\n        <ContactList\n          contacts={data.filter((contact) =>\n            contact.name.toLowerCase().includes(filter),\n          )}\n        ></ContactList>\n      )}\n\n      <Toaster />\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}