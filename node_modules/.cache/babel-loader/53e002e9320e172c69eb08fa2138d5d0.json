{"ast":null,"code":"var _jsxFileName = \"/Users/sima/Documents/GitHub/goit-react-hw-07-phonebook/src/Components/Filter/Filter.jsx\",\n    _s = $RefreshSig$();\n\nimport FilterEl from './Filter.styled'; // import PropTypes from 'prop-types'\n// import { useState } from 'react'\n\nimport { useDispatch } from 'react-redux';\nimport { filterContact } from '../../redux/contacts/filterSlice'; // import { useGetFilteredContactsQuery } from '../../redux/contacts/apiService'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  input: {\n    display: 'block',\n    marginTop: '5px'\n  }\n};\n\nfunction Filter() {\n  _s();\n\n  // const [filter, setFilter] = useState('')\n  // const [getFilteredContacts] = useGetFilteredContactsQuery()\n  const dispatch = useDispatch();\n\n  const handleFilterChange = ({\n    target\n  }) => {\n    const filterInput = target.value;\n    dispatch(filterContact(filterInput));\n  }; // const handleFilterChange = (e) => {\n  //   setFilter(e.target.value)\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(FilterEl, {\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Find contacts by name\", /*#__PURE__*/_jsxDEV(\"input\", {\n        style: styles.input,\n        type: \"text\",\n        name: \"filter\" // value={filter}\n        ,\n        onChange: handleFilterChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n} // Filter.propTypes = {\n//   filter: PropTypes.string,\n//   handleFilterChange: PropTypes.func,\n// }\n// Filter.defaultProps = {\n//   filter: null,\n//   handleFilterChange: null,\n// }\n\n\n_s(Filter, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Filter;\nexport default Filter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["/Users/sima/Documents/GitHub/goit-react-hw-07-phonebook/src/Components/Filter/Filter.jsx"],"names":["FilterEl","useDispatch","filterContact","styles","input","display","marginTop","Filter","dispatch","handleFilterChange","target","filterInput","value"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,iBAArB,C,CACA;AACA;;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,aAAT,QAA8B,kCAA9B,C,CACA;;;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,OADJ;AAELC,IAAAA,SAAS,EAAE;AAFN;AADM,CAAf;;AAOA,SAASC,MAAT,GAAkB;AAAA;;AAChB;AACA;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;;AAEA,QAAMQ,kBAAkB,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgB;AACzC,UAAMC,WAAW,GAAGD,MAAM,CAACE,KAA3B;AACAJ,IAAAA,QAAQ,CAACN,aAAa,CAACS,WAAD,CAAd,CAAR;AACD,GAHD,CALgB,CAShB;AACA;AACA;;;AAEA,sBACE,QAAC,QAAD;AAAA,2BACE;AAAA,uDAEE;AACE,QAAA,KAAK,EAAER,MAAM,CAACC,KADhB;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,IAAI,EAAC,QAHP,CAIE;AAJF;AAKE,QAAA,QAAQ,EAAEK;AALZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,C,CAED;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;GArCSF,M;UAGUN,W;;;KAHVM,M;AAuCT,eAAeA,MAAf","sourcesContent":["import FilterEl from './Filter.styled'\n// import PropTypes from 'prop-types'\n// import { useState } from 'react'\n\nimport { useDispatch } from 'react-redux'\nimport { filterContact } from '../../redux/contacts/filterSlice'\n// import { useGetFilteredContactsQuery } from '../../redux/contacts/apiService'\n\nconst styles = {\n  input: {\n    display: 'block',\n    marginTop: '5px',\n  },\n}\n\nfunction Filter() {\n  // const [filter, setFilter] = useState('')\n  // const [getFilteredContacts] = useGetFilteredContactsQuery()\n  const dispatch = useDispatch()\n\n  const handleFilterChange = ({ target }) => {\n    const filterInput = target.value\n    dispatch(filterContact(filterInput))\n  }\n  // const handleFilterChange = (e) => {\n  //   setFilter(e.target.value)\n  // }\n\n  return (\n    <FilterEl>\n      <label>\n        Find contacts by name\n        <input\n          style={styles.input}\n          type=\"text\"\n          name=\"filter\"\n          // value={filter}\n          onChange={handleFilterChange}\n        ></input>\n      </label>\n    </FilterEl>\n  )\n}\n\n// Filter.propTypes = {\n//   filter: PropTypes.string,\n//   handleFilterChange: PropTypes.func,\n// }\n\n// Filter.defaultProps = {\n//   filter: null,\n//   handleFilterChange: null,\n// }\n\nexport default Filter\n"]},"metadata":{},"sourceType":"module"}