{"ast":null,"code":"var _jsxFileName = \"/Users/sima/Documents/GitHub/goit-react-hw-04-hooks-phonebook/src/Components/App.jsx\";\nimport { Component } from 'react';\nimport ContactAddForm from './ContactAddForm/ContactAddForm';\nimport ContactListItem from './ContactListItem/ContactListItem';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      contacts: [],\n      filter: ''\n    };\n\n    this.addContact = ({\n      name,\n      number\n    }) => {\n      const contactsHaveDuplicate = this.state.contacts.find(contact => contact.name === name);\n      contactsHaveDuplicate ? alert(`${name} is already in contacts`) : this.setState(prevState => ({\n        contacts: [...prevState.contacts, {\n          id: uuidv4(),\n          name: name,\n          number: number\n        }]\n      }));\n    };\n\n    this.handleFilterChange = ({\n      target\n    }) => {\n      const filterInput = target.value;\n      this.setState({\n        filter: filterInput\n      });\n    };\n\n    this.getFilteredNames = () => {\n      const {\n        filter,\n        contacts\n      } = this.state;\n      const normilizedFilterState = filter.toLowerCase();\n      return contacts.filter(contact => contact.name.toLowerCase().includes(normilizedFilterState));\n    };\n\n    this.deleteContact = contactId => {\n      this.setState(prevState => ({\n        contacts: prevState.contacts.filter(contact => contact.id !== contactId)\n      }));\n    };\n  }\n\n  render() {\n    const {\n      filter\n    } = this.state;\n    const filteredContactNames = this.getFilteredNames();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactAddForm, {\n        onSubmit: this.addContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        filter: filter,\n        handleFilterChange: this.handleFilterChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n        children: filteredContactNames.map(({\n          id,\n          name,\n          number\n        }) => /*#__PURE__*/_jsxDEV(ContactListItem, {\n          name: name,\n          number: number,\n          onDelBtnClick: () => this.deleteContact(id)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/sima/Documents/GitHub/goit-react-hw-04-hooks-phonebook/src/Components/App.jsx"],"names":["Component","ContactAddForm","ContactListItem","ContactList","Filter","v4","uuidv4","App","state","contacts","filter","addContact","name","number","contactsHaveDuplicate","find","contact","alert","setState","prevState","id","handleFilterChange","target","filterInput","value","getFilteredNames","normilizedFilterState","toLowerCase","includes","deleteContact","contactId","render","filteredContactNames","map"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport ContactAddForm from './ContactAddForm/ContactAddForm'\nimport ContactListItem from './ContactListItem/ContactListItem'\nimport ContactList from './ContactList/ContactList'\nimport Filter from './Filter/Filter'\nimport { v4 as uuidv4 } from 'uuid'\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  }\n\n  addContact = ({ name, number }) => {\n    const contactsHaveDuplicate = this.state.contacts.find(\n      (contact) => contact.name === name,\n    )\n    contactsHaveDuplicate\n      ? alert(`${name} is already in contacts`)\n      : this.setState((prevState) => ({\n          contacts: [\n            ...prevState.contacts,\n            { id: uuidv4(), name: name, number: number },\n          ],\n        }))\n  }\n\n  handleFilterChange = ({ target }) => {\n    const filterInput = target.value\n    this.setState({\n      filter: filterInput,\n    })\n  }\n\n  getFilteredNames = () => {\n    const { filter, contacts } = this.state\n    const normilizedFilterState = filter.toLowerCase()\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normilizedFilterState),\n    )\n  }\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId,\n      ),\n    }))\n  }\n\n  render() {\n    const { filter } = this.state\n\n    const filteredContactNames = this.getFilteredNames()\n\n    return (\n      <>\n        <h2>Phonebook</h2>\n\n        <ContactAddForm onSubmit={this.addContact} />\n\n        <h2>Contacts</h2>\n\n        <Filter\n          filter={filter}\n          handleFilterChange={this.handleFilterChange}\n        ></Filter>\n\n        <ContactList>\n          {filteredContactNames.map(({ id, name, number }) => (\n            <ContactListItem\n              key={id}\n              name={name}\n              number={number}\n              onDelBtnClick={() => this.deleteContact(id)}\n            />\n          ))}\n        </ContactList>\n      </>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}