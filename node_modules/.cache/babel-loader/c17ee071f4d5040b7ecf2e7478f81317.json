{"ast":null,"code":"var _jsxFileName = \"/Users/sima/Documents/GitHub/goit-react-hw-07-phonebook/src/Components/ContactAddForm/ContactAddForm.jsx\",\n    _s = $RefreshSig$();\n\n// import { useState } from 'react'\nimport ContactAddFormEl from './ContactAddForm.styled'; // import PropTypes from 'prop-types'\n// import { useSelector } from 'react-redux'\n\nimport { useGetContactsQuery } from '../../redux/contacts/apiService'; // import { v4 as uuidv4 } from 'uuid'\n\nimport { useAddContactMutation } from '../../redux/contacts/apiService';\nimport { toast } from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst styles = {\n  input: {\n    display: 'block',\n    marginBottom: '10px',\n    marginTop: '5px'\n  },\n  label: {\n    marginBottom: '10px'\n  },\n  button: {\n    width: '100px',\n    fontSize: '12px',\n    backgroundColor: 'white',\n    borderRadius: '5px',\n    border: '1px solid gray',\n    cursor: 'pointer'\n  }\n};\nexport default function ContactAddForm() {\n  _s();\n\n  const [addContact, {\n    isLoading,\n    isSuccess\n  }] = useAddContactMutation();\n  const {\n    data\n  } = useGetContactsQuery();\n  console.log(data); // const [name, setName] = useState('')\n  // const [number, setNumber] = useState('')\n  // const dispatch = useDispatch()\n  // const contacts = useSelector(contactsSelector)\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contactsHaveDuplicate = data.find(data => data.name === e.target.elements.name.value);\n\n    if (contactsHaveDuplicate) {\n      alert(`${e.target.elements.name.value} is already in contacts`);\n      toast.error('Contact added');\n    } else {\n      addContact({\n        name: e.target.elements.name.value,\n        number: e.target.elements.number.value\n      });\n      toast.success('Contact added');\n    } // onSubmit(name, number)\n    // setName('')\n    // setNumber('')\n    // dispatch(\n    //   addContact({\n    //     id: uuidv4(),\n    // name: e.target.elements.name.value,\n    // number: e.target.elements.number.value,\n    //   }),\n    // )\n\n\n    e.target.reset();\n  }; // const handleChange = (e) => {\n  //   const { name, value } = e.target\n  //   switch (name) {\n  //     case 'name':\n  //       setName(value)\n  //       break\n  //     case 'number':\n  //       setNumber(value)\n  //       break\n  //     default:\n  //       return\n  //   }\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ContactAddFormEl, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: styles.label,\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          style: styles.input,\n          type: \"text\",\n          name: \"name\",\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"\\u0418\\u043C\\u044F \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0438\\u0437 \\u0431\\u0443\\u043A\\u0432, \\u0430\\u043F\\u043E\\u0441\\u0442\\u0440\\u043E\\u0444\\u0430, \\u0442\\u0438\\u0440\\u0435 \\u0438 \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B\\u043E\\u0432. \\u041D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440 Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan \\u0438 \\u0442. \\u043F.\",\n          required: true // value={name}\n          // onChange={handleChange}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: styles.label,\n        children: [\"Number\", /*#__PURE__*/_jsxDEV(\"input\", {\n          style: styles.input,\n          type: \"tel\",\n          name: \"number\",\n          required: true // value={number}\n          // onChange={handleChange}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: styles.button,\n        disabled: isLoading,\n        children: \"Add Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n} // ContactAddForm.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// }\n// export default class ContactAddForm extends Component {\n//   static propTypes = {\n//     onSubmit: PropTypes.func.isRequired,\n//   }\n//   state = {\n//     name: '',\n//     number: '',\n//   }\n// handleSubmit = (e) => {\n//   e.preventDefault()\n//   this.props.onSubmit(this.state)\n//   this.setState({\n//     name: '',\n//     number: '',\n//   })\n// }\n// handleChange = (e) => {\n//   const { name, value } = e.target\n//   this.setState({\n//     [name]: value,\n//   })\n// }\n//   render() {\n//     const { name, number } = this.state\n//     return (\n// <ContactAddFormEl onSubmit={this.handleSubmit}>\n//   <label style={styles.label}>\n//     Name\n//     <input\n//       style={styles.input}\n//       type=\"text\"\n//       name=\"name\"\n//       pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//       title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n//       required\n//       value={name}\n//       onChange={this.handleChange}\n//     />\n//   </label>\n//   <label style={styles.label}>\n//     Number\n//     <input\n//       style={styles.input}\n//       type=\"tel\"\n//       name=\"number\"\n//       required\n//       value={number}\n//       onChange={this.handleChange}\n//     ></input>\n//   </label>\n//   <button type=\"submit\" style={styles.button}>\n//     Add Contact\n//   </button>\n// </ContactAddFormEl>\n//     )\n//   }\n// }\n\n_s(ContactAddForm, \"+z0/qRhxuJ/tqX48NyFG/MRZnJs=\", false, function () {\n  return [useAddContactMutation, useGetContactsQuery];\n});\n\n_c = ContactAddForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactAddForm\");","map":{"version":3,"sources":["/Users/sima/Documents/GitHub/goit-react-hw-07-phonebook/src/Components/ContactAddForm/ContactAddForm.jsx"],"names":["ContactAddFormEl","useGetContactsQuery","useAddContactMutation","toast","styles","input","display","marginBottom","marginTop","label","button","width","fontSize","backgroundColor","borderRadius","border","cursor","ContactAddForm","addContact","isLoading","isSuccess","data","console","log","handleSubmit","e","preventDefault","contactsHaveDuplicate","find","name","target","elements","value","alert","error","number","success","reset"],"mappings":"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","sourcesContent":["// import { useState } from 'react'\nimport ContactAddFormEl from './ContactAddForm.styled'\n// import PropTypes from 'prop-types'\n// import { useSelector } from 'react-redux'\nimport { useGetContactsQuery } from '../../redux/contacts/apiService'\n// import { v4 as uuidv4 } from 'uuid'\nimport { useAddContactMutation } from '../../redux/contacts/apiService'\nimport { toast } from 'react-hot-toast'\n\nconst styles = {\n  input: {\n    display: 'block',\n    marginBottom: '10px',\n    marginTop: '5px',\n  },\n  label: {\n    marginBottom: '10px',\n  },\n  button: {\n    width: '100px',\n    fontSize: '12px',\n    backgroundColor: 'white',\n    borderRadius: '5px',\n    border: '1px solid gray',\n    cursor: 'pointer',\n  },\n}\n\nexport default function ContactAddForm() {\n  const [addContact, { isLoading, isSuccess }] = useAddContactMutation()\n  const { data } = useGetContactsQuery()\n  console.log(data)\n\n  // const [name, setName] = useState('')\n  // const [number, setNumber] = useState('')\n\n  // const dispatch = useDispatch()\n  // const contacts = useSelector(contactsSelector)\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const contactsHaveDuplicate = data.find(\n      (data) => data.name === e.target.elements.name.value,\n    )\n\n    if (contactsHaveDuplicate) {\n      alert(`${e.target.elements.name.value} is already in contacts`)\n      toast.error('Contact added')\n    } else {\n      addContact({\n        name: e.target.elements.name.value,\n        number: e.target.elements.number.value,\n      })\n      toast.success('Contact added')\n    }\n\n    // onSubmit(name, number)\n    // setName('')\n    // setNumber('')\n    // dispatch(\n    //   addContact({\n    //     id: uuidv4(),\n    // name: e.target.elements.name.value,\n    // number: e.target.elements.number.value,\n    //   }),\n    // )\n    e.target.reset()\n  }\n\n  // const handleChange = (e) => {\n  //   const { name, value } = e.target\n  //   switch (name) {\n  //     case 'name':\n  //       setName(value)\n  //       break\n  //     case 'number':\n  //       setNumber(value)\n  //       break\n  //     default:\n  //       return\n  //   }\n  // }\n\n  return (\n    <>\n      <ContactAddFormEl onSubmit={handleSubmit}>\n        <label style={styles.label}>\n          Name\n          <input\n            style={styles.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            // value={name}\n            // onChange={handleChange}\n          />\n        </label>\n        <label style={styles.label}>\n          Number\n          <input\n            style={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            required\n            // value={number}\n            // onChange={handleChange}\n          ></input>\n        </label>\n        <button type=\"submit\" style={styles.button} disabled={isLoading}>\n          Add Contact\n        </button>\n      </ContactAddFormEl>\n    </>\n  )\n}\n\n// ContactAddForm.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// }\n\n// export default class ContactAddForm extends Component {\n//   static propTypes = {\n//     onSubmit: PropTypes.func.isRequired,\n//   }\n\n//   state = {\n//     name: '',\n//     number: '',\n//   }\n\n// handleSubmit = (e) => {\n//   e.preventDefault()\n//   this.props.onSubmit(this.state)\n//   this.setState({\n//     name: '',\n//     number: '',\n//   })\n// }\n\n// handleChange = (e) => {\n//   const { name, value } = e.target\n//   this.setState({\n//     [name]: value,\n//   })\n// }\n\n//   render() {\n//     const { name, number } = this.state\n//     return (\n// <ContactAddFormEl onSubmit={this.handleSubmit}>\n//   <label style={styles.label}>\n//     Name\n//     <input\n//       style={styles.input}\n//       type=\"text\"\n//       name=\"name\"\n//       pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//       title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n//       required\n//       value={name}\n//       onChange={this.handleChange}\n//     />\n//   </label>\n//   <label style={styles.label}>\n//     Number\n//     <input\n//       style={styles.input}\n//       type=\"tel\"\n//       name=\"number\"\n//       required\n//       value={number}\n//       onChange={this.handleChange}\n//     ></input>\n//   </label>\n//   <button type=\"submit\" style={styles.button}>\n//     Add Contact\n//   </button>\n// </ContactAddFormEl>\n//     )\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}