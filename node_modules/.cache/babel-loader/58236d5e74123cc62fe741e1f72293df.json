{"ast":null,"code":"var _jsxFileName = \"/Users/sima/Documents/GitHub/goit-react-hw-07-phonebook/src/Components/ContactList/ContactList.jsx\";\nimport ContactListEl from './ContactList.styled';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ContactList({\n  contacts\n}) {\n  return /*#__PURE__*/_jsxDEV(ContactListEl, {\n    children: [\"contacts.map((\", (id, name, number), \") => (\", /*#__PURE__*/_jsxDEV(ContactListItem, {\n      name: name,\n      number: number,\n      onDelBtnClick: () => dispatch(deleteContact(id))\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), \"))}\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ContactList;\nContactList.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.element)\n};\nexport default ContactList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"sources":["/Users/sima/Documents/GitHub/goit-react-hw-07-phonebook/src/Components/ContactList/ContactList.jsx"],"names":["ContactListEl","PropTypes","ContactList","contacts","id","name","number","dispatch","deleteContact","propTypes","children","arrayOf","element"],"mappings":";AAAA,OAAOA,aAAP,MAA0B,sBAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAAmC;AACjC,sBACE,QAAC,aAAD;AAAA,kCACkBC,EAAE,EAAEC,IAAF,EAAQC,MAD5B,0BAEE,QAAC,eAAD;AAEE,MAAA,IAAI,EAAED,IAFR;AAGE,MAAA,MAAM,EAAEC,MAHV;AAIE,MAAA,aAAa,EAAE,MAAMC,QAAQ,CAACC,aAAa,CAACJ,EAAD,CAAd;AAJ/B,OACOA,EADP;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;KAbQF,W;AAeTA,WAAW,CAACO,SAAZ,GAAwB;AACtBC,EAAAA,QAAQ,EAAET,SAAS,CAACU,OAAV,CAAkBV,SAAS,CAACW,OAA5B;AADY,CAAxB;AAIA,eAAeV,WAAf","sourcesContent":["import ContactListEl from './ContactList.styled'\nimport PropTypes from 'prop-types'\n\nfunction ContactList({ contacts }) {\n  return (\n    <ContactListEl>\n      contacts.map(({(id, name, number)}) => (\n      <ContactListItem\n        key={id}\n        name={name}\n        number={number}\n        onDelBtnClick={() => dispatch(deleteContact(id))}\n      />\n      ))}\n    </ContactListEl>\n  )\n}\n\nContactList.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.element),\n}\n\nexport default ContactList\n"]},"metadata":{},"sourceType":"module"}