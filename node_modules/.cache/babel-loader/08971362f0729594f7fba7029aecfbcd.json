{"ast":null,"code":"import _slicedToArray from\"/Users/sima/Documents/GitHub/goit-react-hw-06-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';import ContactAddFormEl from'./ContactAddForm.styled';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var styles={input:{display:'block',marginBottom:'10px',marginTop:'5px'},label:{marginBottom:'10px'},button:{width:'100px',fontSize:'12px',backgroundColor:'white',borderRadius:'5px',border:'1px solid gray',cursor:'pointer'}};export default function ContactAddForm(_ref){var onSubmit=_ref.onSubmit;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),number=_useState4[0],setNumber=_useState4[1];var handleSubmit=function handleSubmit(e){e.preventDefault();onSubmit(name,number);setName('');setNumber('');};var handleChange=function handleChange(e){var _e$target=e.target,name=_e$target.name,value=_e$target.value;switch(name){case'name':setName(value);break;case'number':setNumber(value);break;default:return;}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(ContactAddFormEl,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"label\",{style:styles.label,children:[\"Name\",/*#__PURE__*/_jsx(\"input\",{style:styles.input,type:\"text\",name:\"name\",pattern:\"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",title:\"\\u0418\\u043C\\u044F \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0438\\u0437 \\u0431\\u0443\\u043A\\u0432, \\u0430\\u043F\\u043E\\u0441\\u0442\\u0440\\u043E\\u0444\\u0430, \\u0442\\u0438\\u0440\\u0435 \\u0438 \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B\\u043E\\u0432. \\u041D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440 Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan \\u0438 \\u0442. \\u043F.\",required:true,value:name,onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"label\",{style:styles.label,children:[\"Number\",/*#__PURE__*/_jsx(\"input\",{style:styles.input,type:\"tel\",name:\"number\",required:true,value:number,onChange:handleChange})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",style:styles.button,children:\"Add Contact\"})]})});}// export default class ContactAddForm extends Component {\n//   static propTypes = {\n//     onSubmit: PropTypes.func.isRequired,\n//   }\n//   state = {\n//     name: '',\n//     number: '',\n//   }\n// handleSubmit = (e) => {\n//   e.preventDefault()\n//   this.props.onSubmit(this.state)\n//   this.setState({\n//     name: '',\n//     number: '',\n//   })\n// }\n// handleChange = (e) => {\n//   const { name, value } = e.target\n//   this.setState({\n//     [name]: value,\n//   })\n// }\n//   render() {\n//     const { name, number } = this.state\n//     return (\n// <ContactAddFormEl onSubmit={this.handleSubmit}>\n//   <label style={styles.label}>\n//     Name\n//     <input\n//       style={styles.input}\n//       type=\"text\"\n//       name=\"name\"\n//       pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//       title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n//       required\n//       value={name}\n//       onChange={this.handleChange}\n//     />\n//   </label>\n//   <label style={styles.label}>\n//     Number\n//     <input\n//       style={styles.input}\n//       type=\"tel\"\n//       name=\"number\"\n//       required\n//       value={number}\n//       onChange={this.handleChange}\n//     ></input>\n//   </label>\n//   <button type=\"submit\" style={styles.button}>\n//     Add Contact\n//   </button>\n// </ContactAddFormEl>\n//     )\n//   }\n// }","map":{"version":3,"sources":["/Users/sima/Documents/GitHub/goit-react-hw-06-phonebook/src/Components/ContactAddForm/ContactAddForm.jsx"],"names":["useState","ContactAddFormEl","styles","input","display","marginBottom","marginTop","label","button","width","fontSize","backgroundColor","borderRadius","border","cursor","ContactAddForm","onSubmit","name","setName","number","setNumber","handleSubmit","e","preventDefault","handleChange","target","value"],"mappings":"8KAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,yBAA7B,C,6IAGA,GAAMC,CAAAA,MAAM,CAAG,CACbC,KAAK,CAAE,CACLC,OAAO,CAAE,OADJ,CAELC,YAAY,CAAE,MAFT,CAGLC,SAAS,CAAE,KAHN,CADM,CAMbC,KAAK,CAAE,CACLF,YAAY,CAAE,MADT,CANM,CASbG,MAAM,CAAE,CACNC,KAAK,CAAE,OADD,CAENC,QAAQ,CAAE,MAFJ,CAGNC,eAAe,CAAE,OAHX,CAINC,YAAY,CAAE,KAJR,CAKNC,MAAM,CAAE,gBALF,CAMNC,MAAM,CAAE,SANF,CATK,CAAf,CAmBA,cAAe,SAASC,CAAAA,cAAT,MAAsC,IAAZC,CAAAA,QAAY,MAAZA,QAAY,CACnD,cAAwBhB,QAAQ,CAAC,EAAD,CAAhC,wCAAOiB,IAAP,eAAaC,OAAb,eACA,eAA4BlB,QAAQ,CAAC,EAAD,CAApC,yCAAOmB,MAAP,eAAeC,SAAf,eAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CAC1BA,CAAC,CAACC,cAAF,GACAP,QAAQ,CAACC,IAAD,CAAOE,MAAP,CAAR,CACAD,OAAO,CAAC,EAAD,CAAP,CACAE,SAAS,CAAC,EAAD,CAAT,CACD,CALD,CAOA,GAAMI,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACF,CAAD,CAAO,CAC1B,cAAwBA,CAAC,CAACG,MAA1B,CAAQR,IAAR,WAAQA,IAAR,CAAcS,KAAd,WAAcA,KAAd,CACA,OAAQT,IAAR,EACE,IAAK,MAAL,CACEC,OAAO,CAACQ,KAAD,CAAP,CACA,MACF,IAAK,QAAL,CACEN,SAAS,CAACM,KAAD,CAAT,CACA,MACF,QACE,OARJ,CAUD,CAZD,CAcA,mBACE,sCACE,MAAC,gBAAD,EAAkB,QAAQ,CAAEL,YAA5B,wBACE,eAAO,KAAK,CAAEnB,MAAM,CAACK,KAArB,+BAEE,cACE,KAAK,CAAEL,MAAM,CAACC,KADhB,CAEE,IAAI,CAAC,MAFP,CAGE,IAAI,CAAC,MAHP,CAIE,OAAO,CAAC,wHAJV,CAKE,KAAK,CAAC,icALR,CAME,QAAQ,KANV,CAOE,KAAK,CAAEc,IAPT,CAQE,QAAQ,CAAEO,YARZ,EAFF,GADF,cAcE,eAAO,KAAK,CAAEtB,MAAM,CAACK,KAArB,iCAEE,cACE,KAAK,CAAEL,MAAM,CAACC,KADhB,CAEE,IAAI,CAAC,KAFP,CAGE,IAAI,CAAC,QAHP,CAIE,QAAQ,KAJV,CAKE,KAAK,CAAEgB,MALT,CAME,QAAQ,CAAEK,YANZ,EAFF,GAdF,cAyBE,eAAQ,IAAI,CAAC,QAAb,CAAsB,KAAK,CAAEtB,MAAM,CAACM,MAApC,yBAzBF,GADF,EADF,CAiCD,CAMD;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { useState } from 'react'\nimport ContactAddFormEl from './ContactAddForm.styled'\nimport PropTypes from 'prop-types'\n\nconst styles = {\n  input: {\n    display: 'block',\n    marginBottom: '10px',\n    marginTop: '5px',\n  },\n  label: {\n    marginBottom: '10px',\n  },\n  button: {\n    width: '100px',\n    fontSize: '12px',\n    backgroundColor: 'white',\n    borderRadius: '5px',\n    border: '1px solid gray',\n    cursor: 'pointer',\n  },\n}\n\nexport default function ContactAddForm({ onSubmit }) {\n  const [name, setName] = useState('')\n  const [number, setNumber] = useState('')\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    onSubmit(name, number)\n    setName('')\n    setNumber('')\n  }\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    switch (name) {\n      case 'name':\n        setName(value)\n        break\n      case 'number':\n        setNumber(value)\n        break\n      default:\n        return\n    }\n  }\n\n  return (\n    <>\n      <ContactAddFormEl onSubmit={handleSubmit}>\n        <label style={styles.label}>\n          Name\n          <input\n            style={styles.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            onChange={handleChange}\n          />\n        </label>\n        <label style={styles.label}>\n          Number\n          <input\n            style={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            required\n            value={number}\n            onChange={handleChange}\n          ></input>\n        </label>\n        <button type=\"submit\" style={styles.button}>\n          Add Contact\n        </button>\n      </ContactAddFormEl>\n    </>\n  )\n}\n\nContactAddForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n}\n\n// export default class ContactAddForm extends Component {\n//   static propTypes = {\n//     onSubmit: PropTypes.func.isRequired,\n//   }\n\n//   state = {\n//     name: '',\n//     number: '',\n//   }\n\n// handleSubmit = (e) => {\n//   e.preventDefault()\n//   this.props.onSubmit(this.state)\n//   this.setState({\n//     name: '',\n//     number: '',\n//   })\n// }\n\n// handleChange = (e) => {\n//   const { name, value } = e.target\n//   this.setState({\n//     [name]: value,\n//   })\n// }\n\n//   render() {\n//     const { name, number } = this.state\n//     return (\n// <ContactAddFormEl onSubmit={this.handleSubmit}>\n//   <label style={styles.label}>\n//     Name\n//     <input\n//       style={styles.input}\n//       type=\"text\"\n//       name=\"name\"\n//       pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//       title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n//       required\n//       value={name}\n//       onChange={this.handleChange}\n//     />\n//   </label>\n//   <label style={styles.label}>\n//     Number\n//     <input\n//       style={styles.input}\n//       type=\"tel\"\n//       name=\"number\"\n//       required\n//       value={number}\n//       onChange={this.handleChange}\n//     ></input>\n//   </label>\n//   <button type=\"submit\" style={styles.button}>\n//     Add Contact\n//   </button>\n// </ContactAddFormEl>\n//     )\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}