{"ast":null,"code":"import { useState } from 'react';\nimport ContactAddForm from './ContactAddForm/ContactAddForm';\nimport ContactListItem from './ContactListItem/ContactListItem';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\nimport { v4 as uuidv4 } from 'uuid';\nexport default function App() {} // export default class App extends Component {\n//   state = {\n//     contacts: [\n//       { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//       { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//       { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//       { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n//     ],\n//     filter: '',\n//   }\n//   addContact = (name, number) => {\n//     const contactsHaveDuplicate = this.state.contacts.find(\n//       (contact) => contact.name === name,\n//     )\n//     contactsHaveDuplicate\n//       ? alert(`${name} is already in contacts`)\n//       : this.setState((prevState) => ({\n//           contacts: [\n//             ...prevState.contacts,\n//             { id: uuidv4(), name: name, number: number },\n//           ],\n//         }))\n//   }\n//   handleFilterChange = ({ target }) => {\n//     const filterInput = target.value\n//     this.setState({\n//       filter: filterInput,\n//     })\n//   }\n//   getFilteredNames = () => {\n//     const { filter, contacts } = this.state\n//     const normilizedFilterState = filter.toLowerCase()\n//     return contacts.filter((contact) =>\n//       contact.name.toLowerCase().includes(normilizedFilterState),\n//     )\n//   }\n//   deleteContact = (contactId) => {\n//     this.setState((prevState) => ({\n//       contacts: prevState.contacts.filter(\n//         (contact) => contact.id !== contactId,\n//       ),\n//     }))\n//   }\n//   render() {\n//     const { filter } = this.state\n//     const filteredContactNames = this.getFilteredNames()\n//     return (\n//       <>\n//         <h2>Phonebook</h2>\n//         <ContactAddForm onSubmit={this.addContact} />\n//         <h2>Contacts</h2>\n//         <Filter\n//           filter={filter}\n//           handleFilterChange={this.handleFilterChange}\n//         ></Filter>\n//         <ContactList>\n//           {filteredContactNames.map(({ id, name, number }) => (\n//             <ContactListItem\n//               key={id}\n//               name={name}\n//               number={number}\n//               onDelBtnClick={() => this.deleteContact(id)}\n//             />\n//           ))}\n//         </ContactList>\n//       </>\n//     )\n//   }\n// }\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sima/Documents/GitHub/goit-react-hw-04-hooks-phonebook/src/Components/App.jsx"],"names":["useState","ContactAddForm","ContactListItem","ContactList","Filter","v4","uuidv4","App"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AAEA,eAAe,SAASC,GAAT,GAAe,CAAE,C,CAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KAlFwBA,G","sourcesContent":["import { useState } from 'react'\nimport ContactAddForm from './ContactAddForm/ContactAddForm'\nimport ContactListItem from './ContactListItem/ContactListItem'\nimport ContactList from './ContactList/ContactList'\nimport Filter from './Filter/Filter'\nimport { v4 as uuidv4 } from 'uuid'\n\nexport default function App() {}\n\n// export default class App extends Component {\n//   state = {\n//     contacts: [\n//       { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//       { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//       { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//       { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n//     ],\n//     filter: '',\n//   }\n\n//   addContact = (name, number) => {\n//     const contactsHaveDuplicate = this.state.contacts.find(\n//       (contact) => contact.name === name,\n//     )\n//     contactsHaveDuplicate\n//       ? alert(`${name} is already in contacts`)\n//       : this.setState((prevState) => ({\n//           contacts: [\n//             ...prevState.contacts,\n//             { id: uuidv4(), name: name, number: number },\n//           ],\n//         }))\n//   }\n\n//   handleFilterChange = ({ target }) => {\n//     const filterInput = target.value\n//     this.setState({\n//       filter: filterInput,\n//     })\n//   }\n\n//   getFilteredNames = () => {\n//     const { filter, contacts } = this.state\n//     const normilizedFilterState = filter.toLowerCase()\n\n//     return contacts.filter((contact) =>\n//       contact.name.toLowerCase().includes(normilizedFilterState),\n//     )\n//   }\n\n//   deleteContact = (contactId) => {\n//     this.setState((prevState) => ({\n//       contacts: prevState.contacts.filter(\n//         (contact) => contact.id !== contactId,\n//       ),\n//     }))\n//   }\n\n//   render() {\n//     const { filter } = this.state\n\n//     const filteredContactNames = this.getFilteredNames()\n\n//     return (\n//       <>\n//         <h2>Phonebook</h2>\n\n//         <ContactAddForm onSubmit={this.addContact} />\n\n//         <h2>Contacts</h2>\n\n//         <Filter\n//           filter={filter}\n//           handleFilterChange={this.handleFilterChange}\n//         ></Filter>\n\n//         <ContactList>\n//           {filteredContactNames.map(({ id, name, number }) => (\n//             <ContactListItem\n//               key={id}\n//               name={name}\n//               number={number}\n//               onDelBtnClick={() => this.deleteContact(id)}\n//             />\n//           ))}\n//         </ContactList>\n//       </>\n//     )\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}