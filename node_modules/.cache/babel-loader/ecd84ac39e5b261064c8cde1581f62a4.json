{"ast":null,"code":"var _jsxFileName = \"/Users/sima/Documents/GitHub/goit-react-hw-04-hooks-phonebook/src/Components/ContactAddForm/ContactAddForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport ContactAddFormEl from './ContactAddForm.styled';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst styles = {\n  input: {\n    display: 'block',\n    marginBottom: '10px',\n    marginTop: '5px'\n  },\n  label: {\n    marginBottom: '10px'\n  },\n  button: {\n    width: '100px',\n    fontSize: '12px',\n    backgroundColor: 'white',\n    borderRadius: '5px',\n    border: '1px solid gray',\n    cursor: 'pointer'\n  }\n};\nexport default function ContactAddForm({\n  onSubmit\n}) {\n  _s();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({\n      name,\n      number\n    });\n    this.setState({\n      name: '',\n      number: ''\n    });\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ContactAddFormEl, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: styles.label,\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          style: styles.input,\n          type: \"text\",\n          name: \"name\",\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"\\u0418\\u043C\\u044F \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0438\\u0437 \\u0431\\u0443\\u043A\\u0432, \\u0430\\u043F\\u043E\\u0441\\u0442\\u0440\\u043E\\u0444\\u0430, \\u0442\\u0438\\u0440\\u0435 \\u0438 \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B\\u043E\\u0432. \\u041D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440 Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan \\u0438 \\u0442. \\u043F.\",\n          required: true,\n          value: name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: styles.label,\n        children: [\"Number\", /*#__PURE__*/_jsxDEV(\"input\", {\n          style: styles.input,\n          type: \"tel\",\n          name: \"number\",\n          required: true,\n          value: number,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: styles.button,\n        children: \"Add Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ContactAddForm, \"mgYk2feJE7Nd8w88JvjzPww6GtA=\");\n\n_c = ContactAddForm;\nContactAddForm.PropTypes = {\n  onSubmit: PropTypes.func.isRequired\n}; // export default class ContactAddForm extends Component {\n//   static propTypes = {\n//     onSubmit: PropTypes.func.isRequired,\n//   }\n//   state = {\n//     name: '',\n//     number: '',\n//   }\n// handleSubmit = (e) => {\n//   e.preventDefault()\n//   this.props.onSubmit(this.state)\n//   this.setState({\n//     name: '',\n//     number: '',\n//   })\n// }\n// handleChange = (e) => {\n//   const { name, value } = e.target\n//   this.setState({\n//     [name]: value,\n//   })\n// }\n//   render() {\n//     const { name, number } = this.state\n//     return (\n// <ContactAddFormEl onSubmit={this.handleSubmit}>\n//   <label style={styles.label}>\n//     Name\n//     <input\n//       style={styles.input}\n//       type=\"text\"\n//       name=\"name\"\n//       pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//       title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n//       required\n//       value={name}\n//       onChange={this.handleChange}\n//     />\n//   </label>\n//   <label style={styles.label}>\n//     Number\n//     <input\n//       style={styles.input}\n//       type=\"tel\"\n//       name=\"number\"\n//       required\n//       value={number}\n//       onChange={this.handleChange}\n//     ></input>\n//   </label>\n//   <button type=\"submit\" style={styles.button}>\n//     Add Contact\n//   </button>\n// </ContactAddFormEl>\n//     )\n//   }\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactAddForm\");","map":{"version":3,"sources":["/Users/sima/Documents/GitHub/goit-react-hw-04-hooks-phonebook/src/Components/ContactAddForm/ContactAddForm.jsx"],"names":["useState","ContactAddFormEl","PropTypes","styles","input","display","marginBottom","marginTop","label","button","width","fontSize","backgroundColor","borderRadius","border","cursor","ContactAddForm","onSubmit","name","setName","number","setNumber","handleSubmit","e","preventDefault","setState","handleChange","value","target","func","isRequired"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport ContactAddFormEl from './ContactAddForm.styled'\nimport PropTypes from 'prop-types'\n\nconst styles = {\n  input: {\n    display: 'block',\n    marginBottom: '10px',\n    marginTop: '5px',\n  },\n  label: {\n    marginBottom: '10px',\n  },\n  button: {\n    width: '100px',\n    fontSize: '12px',\n    backgroundColor: 'white',\n    borderRadius: '5px',\n    border: '1px solid gray',\n    cursor: 'pointer',\n  },\n}\n\nexport default function ContactAddForm({ onSubmit }) {\n  const [name, setName] = useState('')\n  const [number, setNumber] = useState('')\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    onSubmit({ name, number })\n    this.setState({\n      name: '',\n      number: '',\n    })\n  }\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    this.setState({\n      [name]: value,\n    })\n  }\n\n  return (\n    <>\n      <ContactAddFormEl onSubmit={handleSubmit}>\n        <label style={styles.label}>\n          Name\n          <input\n            style={styles.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            onChange={handleChange}\n          />\n        </label>\n        <label style={styles.label}>\n          Number\n          <input\n            style={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            required\n            value={number}\n            onChange={handleChange}\n          ></input>\n        </label>\n        <button type=\"submit\" style={styles.button}>\n          Add Contact\n        </button>\n      </ContactAddFormEl>\n    </>\n  )\n}\n\nContactAddForm.PropTypes = {\n  onSubmit: PropTypes.func.isRequired,\n}\n\n// export default class ContactAddForm extends Component {\n//   static propTypes = {\n//     onSubmit: PropTypes.func.isRequired,\n//   }\n\n//   state = {\n//     name: '',\n//     number: '',\n//   }\n\n// handleSubmit = (e) => {\n//   e.preventDefault()\n//   this.props.onSubmit(this.state)\n//   this.setState({\n//     name: '',\n//     number: '',\n//   })\n// }\n\n// handleChange = (e) => {\n//   const { name, value } = e.target\n//   this.setState({\n//     [name]: value,\n//   })\n// }\n\n//   render() {\n//     const { name, number } = this.state\n//     return (\n// <ContactAddFormEl onSubmit={this.handleSubmit}>\n//   <label style={styles.label}>\n//     Name\n//     <input\n//       style={styles.input}\n//       type=\"text\"\n//       name=\"name\"\n//       pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//       title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n//       required\n//       value={name}\n//       onChange={this.handleChange}\n//     />\n//   </label>\n//   <label style={styles.label}>\n//     Number\n//     <input\n//       style={styles.input}\n//       type=\"tel\"\n//       name=\"number\"\n//       required\n//       value={number}\n//       onChange={this.handleChange}\n//     ></input>\n//   </label>\n//   <button type=\"submit\" style={styles.button}>\n//     Add Contact\n//   </button>\n// </ContactAddFormEl>\n//     )\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}