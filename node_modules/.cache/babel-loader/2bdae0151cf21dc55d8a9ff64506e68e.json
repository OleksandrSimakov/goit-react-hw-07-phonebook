{"ast":null,"code":"// Need to use the React-specific entry point to allow generating React hooks\nimport{createApi,fetchBaseQuery}from'@reduxjs/toolkit/query/react';// Define a service using a base URL and expected endpoints\nexport var contactsApi=createApi({reducerPath:'contactsApi',baseQuery:fetchBaseQuery({baseUrl:'https://6116cc32095013001796b0fe.mockapi.io'}),tagTypes:['Contact'],endpoints:function endpoints(builder){return{getContacts:builder.query({query:function query(){return'/contacts';},providesTags:['Contact']}),// getFilteredContacts: builder.query({\n//   query: (name) => ({\n//     url: `/contacts/${name}`,\n//     method: 'GET',\n//   }),\n//   providesTags: ['Contact'],\n// }),\ndeleteContact:builder.mutation({query:function query(id){return{url:\"/contacts/\".concat(id),method:'DELETE'};},invalidatesTags:['Contact']}),addContact:builder.mutation({query:function query(newContact){return{url:'/contacts',method:'POST',body:newContact};},invalidatesTags:['Contact']})};}});// Export hooks for usage in function components, which are\n// auto-generated based on the defined endpoints\nvar useGetContactsQuery=contactsApi.useGetContactsQuery,useDeleteContactMutation=contactsApi.useDeleteContactMutation,useAddContactMutation=contactsApi.useAddContactMutation;// export const contactsSelector = (state) => state.contactsApi\nexport{useGetContactsQuery,useDeleteContactMutation,useAddContactMutation};","map":{"version":3,"sources":["/Users/sima/Documents/GitHub/goit-react-hw-07-phonebook/src/redux/contacts/apiService.js"],"names":["createApi","fetchBaseQuery","contactsApi","reducerPath","baseQuery","baseUrl","tagTypes","endpoints","builder","getContacts","query","providesTags","deleteContact","mutation","id","url","method","invalidatesTags","addContact","newContact","body","useGetContactsQuery","useDeleteContactMutation","useAddContactMutation"],"mappings":"AAAA;AACA,OAASA,SAAT,CAAoBC,cAApB,KAA0C,8BAA1C,CAEA;AACA,MAAO,IAAMC,CAAAA,WAAW,CAAGF,SAAS,CAAC,CACnCG,WAAW,CAAE,aADsB,CAEnCC,SAAS,CAAEH,cAAc,CAAC,CACxBI,OAAO,CAAE,6CADe,CAAD,CAFU,CAKnCC,QAAQ,CAAE,CAAC,SAAD,CALyB,CAOnCC,SAAS,CAAE,mBAACC,OAAD,QAAc,CACvBC,WAAW,CAAED,OAAO,CAACE,KAAR,CAAc,CACzBA,KAAK,CAAE,uBAAM,WAAN,EADkB,CAEzBC,YAAY,CAAE,CAAC,SAAD,CAFW,CAAd,CADU,CAMvB;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,aAAa,CAAEJ,OAAO,CAACK,QAAR,CAAiB,CAC9BH,KAAK,CAAE,eAACI,EAAD,QAAS,CACdC,GAAG,qBAAeD,EAAf,CADW,CAEdE,MAAM,CAAE,QAFM,CAAT,EADuB,CAK9BC,eAAe,CAAE,CAAC,SAAD,CALa,CAAjB,CAdQ,CAsBvBC,UAAU,CAAEV,OAAO,CAACK,QAAR,CAAiB,CAC3BH,KAAK,CAAE,eAACS,UAAD,QAAiB,CACtBJ,GAAG,CAAE,WADiB,CAEtBC,MAAM,CAAE,MAFc,CAGtBI,IAAI,CAAED,UAHgB,CAAjB,EADoB,CAM3BF,eAAe,CAAE,CAAC,SAAD,CANU,CAAjB,CAtBW,CAAd,EAPwB,CAAD,CAA7B,CAwCP;AACA;AACO,GACLI,CAAAA,mBADK,CAKHnB,WALG,CACLmB,mBADK,CAELC,wBAFK,CAKHpB,WALG,CAELoB,wBAFK,CAGLC,qBAHK,CAKHrB,WALG,CAGLqB,qBAHK,CAMP","sourcesContent":["// Need to use the React-specific entry point to allow generating React hooks\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\n// Define a service using a base URL and expected endpoints\nexport const contactsApi = createApi({\n  reducerPath: 'contactsApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://6116cc32095013001796b0fe.mockapi.io',\n  }),\n  tagTypes: ['Contact'],\n\n  endpoints: (builder) => ({\n    getContacts: builder.query({\n      query: () => '/contacts',\n      providesTags: ['Contact'],\n    }),\n\n    // getFilteredContacts: builder.query({\n    //   query: (name) => ({\n    //     url: `/contacts/${name}`,\n    //     method: 'GET',\n    //   }),\n    //   providesTags: ['Contact'],\n    // }),\n\n    deleteContact: builder.mutation({\n      query: (id) => ({\n        url: `/contacts/${id}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: ['Contact'],\n    }),\n\n    addContact: builder.mutation({\n      query: (newContact) => ({\n        url: '/contacts',\n        method: 'POST',\n        body: newContact,\n      }),\n      invalidatesTags: ['Contact'],\n    }),\n  }),\n})\n\n// Export hooks for usage in function components, which are\n// auto-generated based on the defined endpoints\nexport const {\n  useGetContactsQuery,\n  useDeleteContactMutation,\n  useAddContactMutation,\n  // useGetFilteredContactsQuery,\n} = contactsApi\n// export const contactsSelector = (state) => state.contactsApi\n"]},"metadata":{},"sourceType":"module"}