{"ast":null,"code":"var _jsxFileName = \"/Users/sima/Documents/GitHub/goit-react-hw-07-phonebook/src/Components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { createSelector } from '@reduxjs/toolkit';\nimport ContactAddForm from './ContactAddForm/ContactAddForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\nimport { useSelector } from 'react-redux';\nimport { useGetContactsQuery } from '../redux/contacts/apiService';\nimport { Spinner } from './Spinner/Spinner';\nimport { Toaster } from 'react-hot-toast'; // import { filterSelector } from '../redux/contacts/contacts-selectors'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const {\n    data,\n    isFetching\n  } = useGetContactsQuery(); // const filter = useSelector(filterSelector)\n\n  const filterSelector = state => state.filter.filter;\n\n  const getFilteredContacts = createSelector([useGetContactsQuery, filterSelector], (data, filter) => {\n    data.filter(contact => contact.name.toLowerCase().includes(filter));\n  });\n  console.log(getFilteredContacts);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactAddForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), isFetching && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 22\n    }, this), data && /*#__PURE__*/_jsxDEV(ContactList, {\n      contacts: getFilteredContacts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(Toaster, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"r9jnl25BIHyMn2/r91Vx3IPAHoM=\", false, function () {\n  return [useGetContactsQuery];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sima/Documents/GitHub/goit-react-hw-07-phonebook/src/Components/App.jsx"],"names":["createSelector","ContactAddForm","ContactList","Filter","useSelector","useGetContactsQuery","Spinner","Toaster","App","data","isFetching","filterSelector","state","filter","getFilteredContacts","contact","name","toLowerCase","includes","console","log"],"mappings":";;;AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,mBAAT,QAAoC,8BAApC;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,OAAT,QAAwB,iBAAxB,C,CACA;;;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAuBL,mBAAmB,EAAhD,CAD4B,CAG5B;;AACA,QAAMM,cAAc,GAAIC,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaA,MAA/C;;AAEA,QAAMC,mBAAmB,GAAGd,cAAc,CACxC,CAACK,mBAAD,EAAsBM,cAAtB,CADwC,EAExC,CAACF,IAAD,EAAOI,MAAP,KAAkB;AAChBJ,IAAAA,IAAI,CAACI,MAAL,CAAaE,OAAD,IAAaA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCL,MAApC,CAAzB;AACD,GAJuC,CAA1C;AAOAM,EAAAA,OAAO,CAACC,GAAR,CAAYN,mBAAZ;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAHF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAOE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAPF,EASGJ,UAAU,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YATjB,EAWGD,IAAI,iBAAI,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEK;AAAvB;AAAA;AAAA;AAAA;AAAA,YAXX,eAaE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA,kBADF;AAiBD;;GAhCuBN,G;UACOH,mB;;;KADPG,G","sourcesContent":["import { createSelector } from '@reduxjs/toolkit'\nimport ContactAddForm from './ContactAddForm/ContactAddForm'\nimport ContactList from './ContactList/ContactList'\nimport Filter from './Filter/Filter'\nimport { useSelector } from 'react-redux'\nimport { useGetContactsQuery } from '../redux/contacts/apiService'\nimport { Spinner } from './Spinner/Spinner'\nimport { Toaster } from 'react-hot-toast'\n// import { filterSelector } from '../redux/contacts/contacts-selectors'\n\nexport default function App() {\n  const { data, isFetching } = useGetContactsQuery()\n\n  // const filter = useSelector(filterSelector)\n  const filterSelector = (state) => state.filter.filter\n\n  const getFilteredContacts = createSelector(\n    [useGetContactsQuery, filterSelector],\n    (data, filter) => {\n      data.filter((contact) => contact.name.toLowerCase().includes(filter))\n    },\n  )\n\n  console.log(getFilteredContacts)\n\n  return (\n    <>\n      <h2>Phonebook</h2>\n\n      <ContactAddForm />\n\n      <h2>Contacts</h2>\n\n      <Filter />\n\n      {isFetching && <Spinner />}\n\n      {data && <ContactList contacts={getFilteredContacts}></ContactList>}\n\n      <Toaster />\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}