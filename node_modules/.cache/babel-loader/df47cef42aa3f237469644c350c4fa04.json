{"ast":null,"code":"var _jsxFileName = \"/Users/sima/Documents/GitHub/goit-react-hw-02-phonebook/src/Components/App.jsx\";\nimport { Component } from 'react';\nimport ContactAddForm from './ContactAddForm/ContactAddForm';\nimport ContactListItem from './ContactListItem/ContactListItem';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      contacts: [{\n        id: 'id-1',\n        name: 'Rosie Simpson',\n        number: '459-12-56'\n      }, {\n        id: 'id-2',\n        name: 'Hermione Kline',\n        number: '443-89-12'\n      }, {\n        id: 'id-3',\n        name: 'Eden Clements',\n        number: '645-17-79'\n      }, {\n        id: 'id-4',\n        name: 'Annie Copeland',\n        number: '227-91-26'\n      }],\n      filter: ''\n    };\n\n    this.hasDuplicates = () => {};\n\n    this.addContact = ({\n      name,\n      number\n    }) => {\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts, {\n          id: uuidv4(),\n          name: name,\n          number: number\n        }]\n      }));\n    };\n\n    this.handleFilterChange = ({\n      target\n    }) => {\n      const filterInput = target.value;\n      this.setState({\n        filter: filterInput\n      });\n    };\n\n    this.getFilteredNames = () => {\n      const {\n        filter,\n        contacts\n      } = this.state;\n      const normilizedFilterState = filter.toLowerCase();\n      return contacts.filter(contact => contact.name.toLowerCase().includes(normilizedFilterState));\n    };\n  }\n\n  render() {\n    const {\n      filter\n    } = this.state;\n    const filteredContactNames = this.getFilteredNames();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactAddForm, {\n        onSubmit: this.addContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        filter: filter,\n        handleFilterChange: this.handleFilterChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n        children: filteredContactNames.map(({\n          id,\n          name,\n          number\n        }) => /*#__PURE__*/_jsxDEV(ContactListItem, {\n          name: name,\n          number: number\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/sima/Documents/GitHub/goit-react-hw-02-phonebook/src/Components/App.jsx"],"names":["Component","ContactAddForm","ContactListItem","ContactList","Filter","v4","uuidv4","App","state","contacts","id","name","number","filter","hasDuplicates","addContact","setState","prevState","handleFilterChange","target","filterInput","value","getFilteredNames","normilizedFilterState","toLowerCase","contact","includes","render","filteredContactNames","map"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport ContactAddForm from './ContactAddForm/ContactAddForm'\nimport ContactListItem from './ContactListItem/ContactListItem'\nimport ContactList from './ContactList/ContactList'\nimport Filter from './Filter/Filter'\nimport { v4 as uuidv4 } from 'uuid'\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  }\n\n  hasDuplicates = () => {}\n\n  addContact = ({ name, number }) => {\n    this.setState((prevState) => ({\n      contacts: [\n        ...prevState.contacts,\n        { id: uuidv4(), name: name, number: number },\n      ],\n    }))\n  }\n\n  handleFilterChange = ({ target }) => {\n    const filterInput = target.value\n    this.setState({\n      filter: filterInput,\n    })\n  }\n\n  getFilteredNames = () => {\n    const { filter, contacts } = this.state\n    const normilizedFilterState = filter.toLowerCase()\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normilizedFilterState),\n    )\n  }\n\n  render() {\n    const { filter } = this.state\n\n    const filteredContactNames = this.getFilteredNames()\n\n    return (\n      <>\n        <h2>Phonebook</h2>\n\n        <ContactAddForm onSubmit={this.addContact} />\n\n        <h2>Contacts</h2>\n\n        <Filter\n          filter={filter}\n          handleFilterChange={this.handleFilterChange}\n        ></Filter>\n\n        <ContactList>\n          {filteredContactNames.map(({ id, name, number }) => (\n            <ContactListItem key={id} name={name} number={number} />\n          ))}\n        </ContactList>\n      </>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}