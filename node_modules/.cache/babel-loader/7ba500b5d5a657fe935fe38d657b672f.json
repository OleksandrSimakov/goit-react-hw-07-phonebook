{"ast":null,"code":"// Need to use the React-specific entry point to allow generating React hooks\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'; // Define a service using a base URL and expected endpoints\n\nexport const contactsApi = createApi({\n  reducerPath: 'contactsApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://6116cc32095013001796b0fe.mockapi.io'\n  }),\n  tagTypes: ['Contact'],\n  endpoints: builder => ({\n    getContacts: builder.query({\n      query: () => '/contacts',\n      providesTags: ['Contact']\n    }),\n    getFilteredContacts: builder.query({\n      query: name => ({\n        url: `/contacts/${name}`,\n        method: 'GET'\n      }),\n      invalidatesTags: ['Contact']\n    }),\n    deleteContact: builder.mutation({\n      query: id => ({\n        url: `/contacts/${id}`,\n        method: 'DELETE'\n      }),\n      invalidatesTags: ['Contact']\n    }),\n    addContact: builder.mutation({\n      query: newContact => ({\n        url: '/contacts',\n        method: 'POST',\n        body: newContact\n      }),\n      invalidatesTags: ['Contact']\n    })\n  })\n}); // Export hooks for usage in function components, which are\n// auto-generated based on the defined endpoints\n\nexport const {\n  useGetContactsQuery,\n  useDeleteContactMutation,\n  useAddContactMutation,\n  useGetFilteredContactsQuery\n} = contactsApi; // export const contactsSelector = (state) => state.contactsApi","map":{"version":3,"sources":["/Users/sima/Documents/GitHub/goit-react-hw-07-phonebook/src/redux/contacts/apiService.js"],"names":["createApi","fetchBaseQuery","contactsApi","reducerPath","baseQuery","baseUrl","tagTypes","endpoints","builder","getContacts","query","providesTags","getFilteredContacts","name","url","method","invalidatesTags","deleteContact","mutation","id","addContact","newContact","body","useGetContactsQuery","useDeleteContactMutation","useAddContactMutation","useGetFilteredContactsQuery"],"mappings":"AAAA;AACA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C,C,CAEA;;AACA,OAAO,MAAMC,WAAW,GAAGF,SAAS,CAAC;AACnCG,EAAAA,WAAW,EAAE,aADsB;AAEnCC,EAAAA,SAAS,EAAEH,cAAc,CAAC;AACxBI,IAAAA,OAAO,EAAE;AADe,GAAD,CAFU;AAKnCC,EAAAA,QAAQ,EAAE,CAAC,SAAD,CALyB;AAOnCC,EAAAA,SAAS,EAAGC,OAAD,KAAc;AACvBC,IAAAA,WAAW,EAAED,OAAO,CAACE,KAAR,CAAc;AACzBA,MAAAA,KAAK,EAAE,MAAM,WADY;AAEzBC,MAAAA,YAAY,EAAE,CAAC,SAAD;AAFW,KAAd,CADU;AAMvBC,IAAAA,mBAAmB,EAAEJ,OAAO,CAACE,KAAR,CAAc;AACjCA,MAAAA,KAAK,EAAGG,IAAD,KAAW;AAChBC,QAAAA,GAAG,EAAG,aAAYD,IAAK,EADP;AAEhBE,QAAAA,MAAM,EAAE;AAFQ,OAAX,CAD0B;AAKjCC,MAAAA,eAAe,EAAE,CAAC,SAAD;AALgB,KAAd,CANE;AAcvBC,IAAAA,aAAa,EAAET,OAAO,CAACU,QAAR,CAAiB;AAC9BR,MAAAA,KAAK,EAAGS,EAAD,KAAS;AACdL,QAAAA,GAAG,EAAG,aAAYK,EAAG,EADP;AAEdJ,QAAAA,MAAM,EAAE;AAFM,OAAT,CADuB;AAK9BC,MAAAA,eAAe,EAAE,CAAC,SAAD;AALa,KAAjB,CAdQ;AAsBvBI,IAAAA,UAAU,EAAEZ,OAAO,CAACU,QAAR,CAAiB;AAC3BR,MAAAA,KAAK,EAAGW,UAAD,KAAiB;AACtBP,QAAAA,GAAG,EAAE,WADiB;AAEtBC,QAAAA,MAAM,EAAE,MAFc;AAGtBO,QAAAA,IAAI,EAAED;AAHgB,OAAjB,CADoB;AAM3BL,MAAAA,eAAe,EAAE,CAAC,SAAD;AANU,KAAjB;AAtBW,GAAd;AAPwB,CAAD,CAA7B,C,CAwCP;AACA;;AACA,OAAO,MAAM;AACXO,EAAAA,mBADW;AAEXC,EAAAA,wBAFW;AAGXC,EAAAA,qBAHW;AAIXC,EAAAA;AAJW,IAKTxB,WALG,C,CAMP","sourcesContent":["// Need to use the React-specific entry point to allow generating React hooks\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\n// Define a service using a base URL and expected endpoints\nexport const contactsApi = createApi({\n  reducerPath: 'contactsApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://6116cc32095013001796b0fe.mockapi.io',\n  }),\n  tagTypes: ['Contact'],\n\n  endpoints: (builder) => ({\n    getContacts: builder.query({\n      query: () => '/contacts',\n      providesTags: ['Contact'],\n    }),\n\n    getFilteredContacts: builder.query({\n      query: (name) => ({\n        url: `/contacts/${name}`,\n        method: 'GET',\n      }),\n      invalidatesTags: ['Contact'],\n    }),\n\n    deleteContact: builder.mutation({\n      query: (id) => ({\n        url: `/contacts/${id}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: ['Contact'],\n    }),\n\n    addContact: builder.mutation({\n      query: (newContact) => ({\n        url: '/contacts',\n        method: 'POST',\n        body: newContact,\n      }),\n      invalidatesTags: ['Contact'],\n    }),\n  }),\n})\n\n// Export hooks for usage in function components, which are\n// auto-generated based on the defined endpoints\nexport const {\n  useGetContactsQuery,\n  useDeleteContactMutation,\n  useAddContactMutation,\n  useGetFilteredContactsQuery,\n} = contactsApi\n// export const contactsSelector = (state) => state.contactsApi\n"]},"metadata":{},"sourceType":"module"}