{"ast":null,"code":"import{createApi,fetchBaseQuery}from'@reduxjs/toolkit/query/react';export var contactsApi=createApi({reducerPath:'contactsApi',baseQuery:fetchBaseQuery({baseUrl:'https://6116cc32095013001796b0fe.mockapi.io'}),tagTypes:['Contact'],endpoints:function endpoints(builder){return{getContacts:builder.query({query:function query(){return'/contacts';},providesTags:['Contact']}),deleteContact:builder.mutation({query:function query(id){return{url:\"/contacts/\".concat(id),method:'DELETE'};},invalidatesTags:['Contact']}),addContact:builder.mutation({query:function query(newContact){return{url:'/contacts',method:'POST',body:newContact};},invalidatesTags:['Contact']})};}});var useGetContactsQuery=contactsApi.useGetContactsQuery,useDeleteContactMutation=contactsApi.useDeleteContactMutation,useAddContactMutation=contactsApi.useAddContactMutation;export{useGetContactsQuery,useDeleteContactMutation,useAddContactMutation};","map":{"version":3,"sources":["/Users/sima/Documents/GitHub/goit-react-hw-07-phonebook/src/redux/contacts/apiService.js"],"names":["createApi","fetchBaseQuery","contactsApi","reducerPath","baseQuery","baseUrl","tagTypes","endpoints","builder","getContacts","query","providesTags","deleteContact","mutation","id","url","method","invalidatesTags","addContact","newContact","body","useGetContactsQuery","useDeleteContactMutation","useAddContactMutation"],"mappings":"AAAA,OAASA,SAAT,CAAoBC,cAApB,KAA0C,8BAA1C,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAGF,SAAS,CAAC,CACnCG,WAAW,CAAE,aADsB,CAEnCC,SAAS,CAAEH,cAAc,CAAC,CACxBI,OAAO,CAAE,6CADe,CAAD,CAFU,CAKnCC,QAAQ,CAAE,CAAC,SAAD,CALyB,CAOnCC,SAAS,CAAE,mBAACC,OAAD,QAAc,CACvBC,WAAW,CAAED,OAAO,CAACE,KAAR,CAAc,CACzBA,KAAK,CAAE,uBAAM,WAAN,EADkB,CAEzBC,YAAY,CAAE,CAAC,SAAD,CAFW,CAAd,CADU,CAMvBC,aAAa,CAAEJ,OAAO,CAACK,QAAR,CAAiB,CAC9BH,KAAK,CAAE,eAACI,EAAD,QAAS,CACdC,GAAG,qBAAeD,EAAf,CADW,CAEdE,MAAM,CAAE,QAFM,CAAT,EADuB,CAK9BC,eAAe,CAAE,CAAC,SAAD,CALa,CAAjB,CANQ,CAcvBC,UAAU,CAAEV,OAAO,CAACK,QAAR,CAAiB,CAC3BH,KAAK,CAAE,eAACS,UAAD,QAAiB,CACtBJ,GAAG,CAAE,WADiB,CAEtBC,MAAM,CAAE,MAFc,CAGtBI,IAAI,CAAED,UAHgB,CAAjB,EADoB,CAM3BF,eAAe,CAAE,CAAC,SAAD,CANU,CAAjB,CAdW,CAAd,EAPwB,CAAD,CAA7B,CAgCA,GACLI,CAAAA,mBADK,CAIHnB,WAJG,CACLmB,mBADK,CAELC,wBAFK,CAIHpB,WAJG,CAELoB,wBAFK,CAGLC,qBAHK,CAIHrB,WAJG,CAGLqB,qBAHK,C","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const contactsApi = createApi({\n  reducerPath: 'contactsApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://6116cc32095013001796b0fe.mockapi.io',\n  }),\n  tagTypes: ['Contact'],\n\n  endpoints: (builder) => ({\n    getContacts: builder.query({\n      query: () => '/contacts',\n      providesTags: ['Contact'],\n    }),\n\n    deleteContact: builder.mutation({\n      query: (id) => ({\n        url: `/contacts/${id}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: ['Contact'],\n    }),\n\n    addContact: builder.mutation({\n      query: (newContact) => ({\n        url: '/contacts',\n        method: 'POST',\n        body: newContact,\n      }),\n      invalidatesTags: ['Contact'],\n    }),\n  }),\n})\n\nexport const {\n  useGetContactsQuery,\n  useDeleteContactMutation,\n  useAddContactMutation,\n} = contactsApi\n"]},"metadata":{},"sourceType":"module"}