{"ast":null,"code":"import _slicedToArray from\"/Users/sima/Documents/GitHub/goit-react-hw-07-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import ContactListEl from'./ContactList.styled';import ContactListItem from'../ContactListItem/ContactListItem';import{useDeleteContactMutation}from'../../redux/contacts/apiService';import{jsx as _jsx}from\"react/jsx-runtime\";function ContactList(_ref){var contacts=_ref.contacts;var _useDeleteContactMuta=useDeleteContactMutation(),_useDeleteContactMuta2=_slicedToArray(_useDeleteContactMuta,1),deleteContact=_useDeleteContactMuta2[0];return/*#__PURE__*/_jsx(ContactListEl,{children:contacts.map(function(_ref2){var id=_ref2.id,name=_ref2.name,number=_ref2.number;return/*#__PURE__*/_jsx(ContactListItem,{name:name,number:number,onDelBtnClick:function onDelBtnClick(){return deleteContact(id);}},id);})});}export default ContactList;","map":{"version":3,"sources":["/Users/sima/Documents/GitHub/goit-react-hw-07-phonebook/src/Components/ContactList/ContactList.jsx"],"names":["ContactListEl","ContactListItem","useDeleteContactMutation","ContactList","contacts","deleteContact","map","id","name","number"],"mappings":"8KAAA,MAAOA,CAAAA,aAAP,KAA0B,sBAA1B,CAEA,MAAOC,CAAAA,eAAP,KAA4B,oCAA5B,CACA,OAASC,wBAAT,KAAyC,iCAAzC,C,2CAEA,QAASC,CAAAA,WAAT,MAAmC,IAAZC,CAAAA,QAAY,MAAZA,QAAY,CACjC,0BAAwBF,wBAAwB,EAAhD,gEAAOG,aAAP,2BAEA,mBACE,KAAC,aAAD,WACGD,QAAQ,CAACE,GAAT,CAAa,mBAAGC,CAAAA,EAAH,OAAGA,EAAH,CAAOC,IAAP,OAAOA,IAAP,CAAaC,MAAb,OAAaA,MAAb,oBACZ,KAAC,eAAD,EAEE,IAAI,CAAED,IAFR,CAGE,MAAM,CAAEC,MAHV,CAIE,aAAa,CAAE,+BAAMJ,CAAAA,aAAa,CAACE,EAAD,CAAnB,EAJjB,EACOA,EADP,CADY,EAAb,CADH,EADF,CAYD,CAMD,cAAeJ,CAAAA,WAAf","sourcesContent":["import ContactListEl from './ContactList.styled'\nimport PropTypes from 'prop-types'\nimport ContactListItem from '../ContactListItem/ContactListItem'\nimport { useDeleteContactMutation } from '../../redux/contacts/apiService'\n\nfunction ContactList({ contacts }) {\n  const [deleteContact] = useDeleteContactMutation()\n\n  return (\n    <ContactListEl>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          name={name}\n          number={number}\n          onDelBtnClick={() => deleteContact(id)}\n        />\n      ))}\n    </ContactListEl>\n  )\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n}\n\nexport default ContactList\n"]},"metadata":{},"sourceType":"module"}