{"ast":null,"code":"import _toConsumableArray from\"/Users/sima/Documents/GitHub/goit-react-hw-04-hooks-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/sima/Documents/GitHub/goit-react-hw-04-hooks-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';import ContactAddForm from'./ContactAddForm/ContactAddForm';import ContactListItem from'./ContactListItem/ContactListItem';import ContactList from'./ContactList/ContactList';import Filter from'./Filter/Filter';import{v4 as uuidv4}from'uuid';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function App(){var _useState=useState([{id:'id-1',name:'Rosie Simpson',number:'459-12-56'},{id:'id-2',name:'Hermione Kline',number:'443-89-12'},{id:'id-3',name:'Eden Clements',number:'645-17-79'},{id:'id-4',name:'Annie Copeland',number:'227-91-26'}]),_useState2=_slicedToArray(_useState,2),contacts=_useState2[0],setContacts=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),filter=_useState4[0],setFilter=_useState4[1];var addContact=function addContact(name,number){var contactsHaveDuplicate=contacts.find(function(contact){return contact.name===name;});contactsHaveDuplicate?alert(\"\".concat(name,\" is already in contacts\")):setContacts(function(prevState){return[].concat(_toConsumableArray(prevState),[{id:uuidv4(),name:name,number:number}]);});};var handleFilterChange=function handleFilterChange(_ref){var target=_ref.target;var filterInput=target.value;setFilter(filterInput);};function getFilteredNames(){var normilizedFilterState=filter.toLowerCase();return contacts.filter(function(contact){return contact.name.toLowerCase().includes(normilizedFilterState);});}var deleteContact=function deleteContact(contactId){setContacts(function(prevState){return _toConsumableArray(prevState).filter(function(contact){return contact.id!==contactId;});});};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Phonebook\"}),/*#__PURE__*/_jsx(ContactAddForm,{onSubmit:addContact}),/*#__PURE__*/_jsx(\"h2\",{children:\"Contacts\"}),/*#__PURE__*/_jsx(Filter,{filter:filter,handleFilterChange:handleFilterChange}),/*#__PURE__*/_jsx(ContactList,{children:getFilteredNames().map(function(_ref2){var id=_ref2.id,name=_ref2.name,number=_ref2.number;return/*#__PURE__*/_jsx(ContactListItem,{name:name,number:number,onDelBtnClick:function onDelBtnClick(){return deleteContact(id);}},id);})})]});}// export default class App extends Component {\n//   state = {\n//     contacts: [\n// { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n// { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n// { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n// { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n//     ],\n//     filter: '',\n//   }\n// addContact = (name, number) => {\n//   const contactsHaveDuplicate = this.state.contacts.find(\n//     (contact) => contact.name === name,\n//   )\n//   contactsHaveDuplicate\n//     ? alert(`${name} is already in contacts`)\n//     : this.setState((prevState) => ({\n//         contacts: [\n//           ...prevState.contacts,\n//           { id: uuidv4(), name: name, number: number },\n//         ],\n//       }))\n// }\n// handleFilterChange = ({ target }) => {\n//   const filterInput = target.value\n//   this.setState({\n//     filter: filterInput,\n//   })\n// }\n// getFilteredNames = () => {\n//   const { filter, contacts } = this.state\n//   const normilizedFilterState = filter.toLowerCase()\n//   return contacts.filter((contact) =>\n//     contact.name.toLowerCase().includes(normilizedFilterState),\n//   )\n// }\n// deleteContact = (contactId) => {\n//   this.setState((prevState) => ({\n//     contacts: prevState.contacts.filter(\n//       (contact) => contact.id !== contactId,\n//     ),\n//   }))\n// }\n//   render() {\n//     const { filter } = this.state\n//     const filteredContactNames = this.getFilteredNames()\n//     return (\n//       <>\n// <h2>Phonebook</h2>\n// <ContactAddForm onSubmit={this.addContact} />\n// <h2>Contacts</h2>\n// <Filter\n//   filter={filter}\n//   handleFilterChange={this.handleFilterChange}\n// ></Filter>\n// <ContactList>\n//   {filteredContactNames.map(({ id, name, number }) => (\n//     <ContactListItem\n//       key={id}\n//       name={name}\n//       number={number}\n//       onDelBtnClick={() => this.deleteContact(id)}\n//     />\n//   ))}\n// </ContactList>\n//       </>\n//     )\n//   }\n// }","map":{"version":3,"sources":["/Users/sima/Documents/GitHub/goit-react-hw-04-hooks-phonebook/src/Components/App.jsx"],"names":["useState","ContactAddForm","ContactListItem","ContactList","Filter","v4","uuidv4","App","id","name","number","contacts","setContacts","filter","setFilter","addContact","contactsHaveDuplicate","find","contact","alert","prevState","handleFilterChange","target","filterInput","value","getFilteredNames","normilizedFilterState","toLowerCase","includes","deleteContact","contactId","map"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport ContactAddForm from './ContactAddForm/ContactAddForm'\nimport ContactListItem from './ContactListItem/ContactListItem'\nimport ContactList from './ContactList/ContactList'\nimport Filter from './Filter/Filter'\nimport { v4 as uuidv4 } from 'uuid'\n\nexport default function App() {\n  const [contacts, setContacts] = useState([\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ])\n\n  const [filter, setFilter] = useState('')\n\n  const addContact = (name, number) => {\n    const contactsHaveDuplicate = contacts.find(\n      (contact) => contact.name === name,\n    )\n    contactsHaveDuplicate\n      ? alert(`${name} is already in contacts`)\n      : setContacts((prevState) => [\n          ...prevState,\n          { id: uuidv4(), name: name, number: number },\n        ])\n  }\n\n  const handleFilterChange = ({ target }) => {\n    const filterInput = target.value\n    setFilter(filterInput)\n  }\n\n  function getFilteredNames() {\n    const normilizedFilterState = filter.toLowerCase()\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normilizedFilterState),\n    )\n  }\n\n  const deleteContact = (contactId) => {\n    setContacts((prevState) =>\n      [...prevState].filter((contact) => contact.id !== contactId),\n    )\n  }\n\n  return (\n    <>\n      <h2>Phonebook</h2>\n\n      <ContactAddForm onSubmit={addContact} />\n\n      <h2>Contacts</h2>\n\n      <Filter filter={filter} handleFilterChange={handleFilterChange}></Filter>\n\n      <ContactList>\n        {getFilteredNames().map(({ id, name, number }) => (\n          <ContactListItem\n            key={id}\n            name={name}\n            number={number}\n            onDelBtnClick={() => deleteContact(id)}\n          />\n        ))}\n      </ContactList>\n    </>\n  )\n}\n\n// export default class App extends Component {\n//   state = {\n//     contacts: [\n// { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n// { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n// { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n// { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n//     ],\n//     filter: '',\n//   }\n\n// addContact = (name, number) => {\n//   const contactsHaveDuplicate = this.state.contacts.find(\n//     (contact) => contact.name === name,\n//   )\n//   contactsHaveDuplicate\n//     ? alert(`${name} is already in contacts`)\n//     : this.setState((prevState) => ({\n//         contacts: [\n//           ...prevState.contacts,\n//           { id: uuidv4(), name: name, number: number },\n//         ],\n//       }))\n// }\n\n// handleFilterChange = ({ target }) => {\n//   const filterInput = target.value\n//   this.setState({\n//     filter: filterInput,\n//   })\n// }\n\n// getFilteredNames = () => {\n//   const { filter, contacts } = this.state\n//   const normilizedFilterState = filter.toLowerCase()\n\n//   return contacts.filter((contact) =>\n//     contact.name.toLowerCase().includes(normilizedFilterState),\n//   )\n// }\n\n// deleteContact = (contactId) => {\n//   this.setState((prevState) => ({\n//     contacts: prevState.contacts.filter(\n//       (contact) => contact.id !== contactId,\n//     ),\n//   }))\n// }\n\n//   render() {\n//     const { filter } = this.state\n\n//     const filteredContactNames = this.getFilteredNames()\n\n//     return (\n//       <>\n// <h2>Phonebook</h2>\n\n// <ContactAddForm onSubmit={this.addContact} />\n\n// <h2>Contacts</h2>\n\n// <Filter\n//   filter={filter}\n//   handleFilterChange={this.handleFilterChange}\n// ></Filter>\n\n// <ContactList>\n//   {filteredContactNames.map(({ id, name, number }) => (\n//     <ContactListItem\n//       key={id}\n//       name={name}\n//       number={number}\n//       onDelBtnClick={() => this.deleteContact(id)}\n//     />\n//   ))}\n// </ContactList>\n//       </>\n//     )\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}