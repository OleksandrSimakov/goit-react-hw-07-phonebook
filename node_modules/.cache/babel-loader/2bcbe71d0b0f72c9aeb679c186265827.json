{"ast":null,"code":"var _jsxFileName = \"/Users/sima/Documents/GitHub/goit-react-hw-06-phonebook/src/Components/Filter/Filter.jsx\",\n    _s = $RefreshSig$();\n\nimport FilterEl from './Filter.styled';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterContact } from '../../redux/contacts/contactsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  input: {\n    display: 'block',\n    marginTop: '5px'\n  }\n};\n\nfunction Filter() {\n  _s();\n\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter);\n\n  const handleFilterChange = ({\n    target\n  }) => {\n    const filterInput = target.value;\n    dispatch(filterContact(filterInput));\n  };\n\n  return /*#__PURE__*/_jsxDEV(FilterEl, {\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Find contacts by name\", /*#__PURE__*/_jsxDEV(\"input\", {\n        style: styles.input,\n        type: \"text\",\n        name: \"filter\" // value={filter}\n        ,\n        onChange: handleFilterChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Filter, \"L6lxqzkGfmIBtVCFyKLo1v6lsA0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Filter;\nFilter.propTypes = {\n  filter: PropTypes.string,\n  handleFilterChange: PropTypes.func\n};\nFilter.defaultProps = {\n  filter: null,\n  handleFilterChange: null\n};\nexport default Filter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["/Users/sima/Documents/GitHub/goit-react-hw-06-phonebook/src/Components/Filter/Filter.jsx"],"names":["FilterEl","PropTypes","useSelector","useDispatch","filterContact","styles","input","display","marginTop","Filter","dispatch","filter","state","handleFilterChange","target","filterInput","value","propTypes","string","func","defaultProps"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,iBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,oCAA9B;;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,OADJ;AAELC,IAAAA,SAAS,EAAE;AAFN;AADM,CAAf;;AAOA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,MAAM,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACD,MAAlB,CAA1B;;AAEA,QAAME,kBAAkB,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgB;AACzC,UAAMC,WAAW,GAAGD,MAAM,CAACE,KAA3B;AACAN,IAAAA,QAAQ,CAACN,aAAa,CAACW,WAAD,CAAd,CAAR;AACD,GAHD;;AAKA,sBACE,QAAC,QAAD;AAAA,2BACE;AAAA,uDAEE;AACE,QAAA,KAAK,EAAEV,MAAM,CAACC,KADhB;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,IAAI,EAAC,QAHP,CAIE;AAJF;AAKE,QAAA,QAAQ,EAAEO;AALZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAvBQJ,M;UACUN,W,EACFD,W;;;KAFRO,M;AAyBTA,MAAM,CAACQ,SAAP,GAAmB;AACjBN,EAAAA,MAAM,EAAEV,SAAS,CAACiB,MADD;AAEjBL,EAAAA,kBAAkB,EAAEZ,SAAS,CAACkB;AAFb,CAAnB;AAKAV,MAAM,CAACW,YAAP,GAAsB;AACpBT,EAAAA,MAAM,EAAE,IADY;AAEpBE,EAAAA,kBAAkB,EAAE;AAFA,CAAtB;AAKA,eAAeJ,MAAf","sourcesContent":["import FilterEl from './Filter.styled'\nimport PropTypes from 'prop-types'\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport { filterContact } from '../../redux/contacts/contactsSlice'\n\nconst styles = {\n  input: {\n    display: 'block',\n    marginTop: '5px',\n  },\n}\n\nfunction Filter() {\n  const dispatch = useDispatch()\n  const filter = useSelector((state) => state.filter)\n\n  const handleFilterChange = ({ target }) => {\n    const filterInput = target.value\n    dispatch(filterContact(filterInput))\n  }\n\n  return (\n    <FilterEl>\n      <label>\n        Find contacts by name\n        <input\n          style={styles.input}\n          type=\"text\"\n          name=\"filter\"\n          // value={filter}\n          onChange={handleFilterChange}\n        ></input>\n      </label>\n    </FilterEl>\n  )\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  handleFilterChange: PropTypes.func,\n}\n\nFilter.defaultProps = {\n  filter: null,\n  handleFilterChange: null,\n}\n\nexport default Filter\n"]},"metadata":{},"sourceType":"module"}